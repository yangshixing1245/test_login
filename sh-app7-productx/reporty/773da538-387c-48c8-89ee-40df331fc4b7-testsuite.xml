<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1554029983687" stop="1554030137470">
  <name>test_login</name>
  <labels/>
  <test-cases>
    <test-case start="1554029983687" status="failed" stop="1554030063022">
      <description>预期成功测试用例</description>
      <name>Test_login.test_suc_login[login_test_001-13488834010-159357li1-\u6211\u7684\u4f18\u60e0\u5238]</name>
      <failure>
        <message>AssertionError: assert False</message>
        <stack-trace>self = &lt;test_login.Test_login object at 0x00000248FEABB5C0&gt;, case_num = 'login_test_001'
username = '13488834010', passwd = '159357li1', exp_data = '我的优惠券'

    def test_suc_login(self, case_num, username, passwd, exp_data):
        """预期成功测试用例"""
        # 登录操作
        self.page_obj.get_login_page().login(username, passwd)
        try:
            # 获取我的优惠券
            coup = self.page_obj.get_person_page().get_coupons_text()
&gt;           try:

scripts\test_login.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;Page.person_page.PersonPage object at 0x00000248FEAEC7F0&gt;

    def get_coupons_text(self):
        """获取我的优惠券文本"""
        # 定位优惠券
&gt;       coupons_text = self.search_element(UIElement.person_coupons_id).text

Page\person_page.py:12: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;Page.person_page.PersonPage object at 0x00000248FEAEC7F0&gt;
loc = ('id', 'com.yunmall.lc:id/txt_my_coupons'), timeout = 10, poll_frequency = 1.0

    def search_element(self, loc, timeout=10, poll_frequency=1.0):
        """
            定位单个元素
            :param loc: 元组 (By.ID,id属性值) (By.XPATh,xpath属性值) (By.CLSS_NAME,class属性值)
            :param timeout: 搜索元素超时时间
            :param poll_frequency: 元素查找间隔时间
            :return: 元素定位对象
            """
&gt;       return WebDriverWait(self.driver, timeout, poll_frequency).until(lambda x: x.find_element(*loc))

Base\base.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88dee196-8024-4586-ab0d-5f652813c062")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x00000248FCBE6840&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

c:\python36\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException

During handling of the above exception, another exception occurred:

self = &lt;test_login.Test_login object at 0x00000248FEABB5C0&gt;, case_num = 'login_test_001'
username = '13488834010', passwd = '159357li1', exp_data = '我的优惠券'

    def test_suc_login(self, case_num, username, passwd, exp_data):
        """预期成功测试用例"""
        # 登录操作
        self.page_obj.get_login_page().login(username, passwd)
        try:
            # 获取我的优惠券
            coup = self.page_obj.get_person_page().get_coupons_text()
            try:
                assert coup == exp_data
            except AssertionError:
                # 截图 TODO
                self.page_obj.get_login_page().screen_png()
                # 显示断言失败
                assert False
            finally:
                # 点击个人中心设置按钮
                self.page_obj.get_person_page().click_setting_btn()
                # 设置页面执行退出操作
                self.page_obj.get_setting_page().logout('y')
        except TimeoutException:
            # 截图 TODO
            self.page_obj.get_login_page().screen_png()
            """新功能的增加不会选择更改老功能元素属性"""
            # try:
            #     # 执行退出操作
            #     self.page_obj.get_person_page().click_setting_btn()
            #     self.page_obj.get_setting_page().logout('y')
            #
            # except TimeoutException:
            #     # 关闭登录页面--页面还停留在登录页
            #     self.page_obj.get_login_page().close_login_page()
            # 关闭登录页面--页面还停留在登录页
            self.page_obj.get_login_page().close_login_page()
            # 显示断言失败
            assert False
&gt;   @pytest.mark.parametrize("case_num, username, passwd, toast_mes, exp_data", get_login_data().get("fail"))
    def test_fail_login(self, case_num, username, passwd, toast_mes, exp_data):
E   assert False

scripts\test_login.py:79: AssertionError</stack-trace>
      </failure>
      <attachments>
        <attachment source="bab310f5-88d5-4ad3-9c09-5a03d093e890-attachment.png" title="截图" type="image/png"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="10620-MainThread"/>
        <label name="host" value="DESKTOP-M2UELJF"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1554030063066" status="passed" stop="1554030079095">
      <description>预期成功测试用例</description>
      <name>Test_login.test_suc_login[login_test_014-mlili-159357li-\u6211\u7684\u4f18\u60e0\u5238]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="10620-MainThread"/>
        <label name="host" value="DESKTOP-M2UELJF"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1554030079098" status="failed" stop="1554030100640">
      <description>预期失败测试用例</description>
      <name>Test_login.test_fail_login[login_test_005-13488834010-159357li-\u9519\u8bef-\u767b\u5f55\u5bc6\u7801\u9519\u8bef]</name>
      <failure>
        <message>AssertionError: assert False</message>
        <stack-trace>self = &lt;test_login.Test_login object at 0x00000248FEB766A0&gt;, case_num = 'login_test_005'
username = '13488834010', passwd = '159357li', toast_mes = '错误', exp_data = '登录密码错误'

&gt;   ???

scripts\test_login.py:88: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;Page.setting_page.SettingPage object at 0x00000248FEB734E0&gt;, tos = '错误'

    def get_toast(self, tos):
        """
            # 获取消息
            :param tos: xpath需要文本
            :return: toast消息文本
            """
        xpath_data = (By.XPATH, "//*[contains(@text,'%s')]" % tos)
&gt;       toast_text = self.search_element(xpath_data, timeout=3, poll_frequency=0.5)

Base\base.py:85: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;Page.setting_page.SettingPage object at 0x00000248FEB734E0&gt;
loc = ('xpath', "//*[contains(@text,'错误')]"), timeout = 3, poll_frequency = 0.5

    def search_element(self, loc, timeout=10, poll_frequency=1.0):
        """
            定位单个元素
            :param loc: 元组 (By.ID,id属性值) (By.XPATh,xpath属性值) (By.CLSS_NAME,class属性值)
            :param timeout: 搜索元素超时时间
            :param poll_frequency: 元素查找间隔时间
            :return: 元素定位对象
            """
&gt;       return WebDriverWait(self.driver, timeout, poll_frequency).until(lambda x: x.find_element(*loc))

Base\base.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="88dee196-8024-4586-ab0d-5f652813c062")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x00000248FEB63268&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

c:\python36\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException

During handling of the above exception, another exception occurred:

self = &lt;test_login.Test_login object at 0x00000248FEB766A0&gt;, case_num = 'login_test_005'
username = '13488834010', passwd = '159357li', toast_mes = '错误', exp_data = '登录密码错误'

&gt;   ???
E   assert False

scripts\test_login.py:112: AssertionError</stack-trace>
      </failure>
      <attachments>
        <attachment source="5bcd356e-5a0e-4f85-83b5-97aee97d144d-attachment.png" title="截图" type="image/png"/>
      </attachments>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="10620-MainThread"/>
        <label name="host" value="DESKTOP-M2UELJF"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1554030100664" status="passed" stop="1554030109518">
      <description>预期失败测试用例</description>
      <name>Test_login.test_fail_login[login_test_009-17722223333-159357-\u4e0d\u5b58\u5728-\u6b64\u7528\u6237\u4e0d\u5b58\u5728]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="10620-MainThread"/>
        <label name="host" value="DESKTOP-M2UELJF"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1554030109522" status="passed" stop="1554030128520">
      <description>预期失败测试用例</description>
      <name>Test_login.test_fail_login[login_test_020-mlili-159357-\u9519\u8bef-\u767b\u5f55\u5bc6\u7801\u9519\u8bef]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="10620-MainThread"/>
        <label name="host" value="DESKTOP-M2UELJF"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1554030128529" status="passed" stop="1554030137470">
      <description>预期失败测试用例</description>
      <name>Test_login.test_fail_login[login_test_024-loop123-159357-\u4e0d\u5b58\u5728-\u6b64\u7528\u6237\u4e0d\u5b58\u5728]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="10620-MainThread"/>
        <label name="host" value="DESKTOP-M2UELJF"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
